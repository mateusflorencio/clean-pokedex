@import "./colors.scss";
@import "./colors-category-pokemon.scss";

$colors: (
  "blue": $blue,
  "green": $green,
  "water": $water,
  "bug": $bug,
  "fire": $fire,
  "lightning": $lightning,
);

@mixin box {
  width: 100%;
  max-width: 1000px;
  margin: auto;
}

// suport ////////////////////////////////////////////////////////
@mixin bgColorWithHover($color, $mode, $percente) {
  background-color: $color;
  @if $mode == "darken" {
    &:hover {
      background-color: darken($color, $percente);
    }
  } @else if $mode == "lighten" {
    &:hover {
      background-color: lighten($color, $percente);
    }
  } @else {
    &:hover {
      background-color: $color;
    }
  }
}
/////////////////////////////////////////////////////////////////

@mixin generateBgWithHover($mode, $percente) {
  @each $name, $cor in $colors {
    .bg-#{$name} {
      @include bgColorWithHover($cor, $mode, $percente);
    }
  }
}

// suport ////////////////////////////////////////////////////////
@mixin bgColorWithGradient($cor, $direction, $percente) {
  background: linear-gradient(to $direction, $cor 0%, darken($cor, $percente) 100%);
}
/////////////////////////////////////////////////////////////////

@mixin generateBgWithGradient($direction, $percentege) {
  @each $name, $cor in $colors {
    .bg-#{$name}-gradient-to-#{$direction} {
      @include bgColorWithGradient($cor, $direction, $percentege);
    }
  }
}

@mixin wh($width: 100%, $height: 100%) {
  width: $width;
  height: $height;
}

@mixin borderRadius($radius: 0.8rem) {
  border-radius: $radius;
}

@mixin allCenter {
  display: flex;
  align-items: center;
  align-content: center;
  justify-content: center;
  align-self: center;
}
